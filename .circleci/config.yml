version: 2.1

parameters:
  rust-version:
    type: string
    default: "1.81" # Change target-cache-key when you change this!
  target-cache-key:
    type: string
    default: "v0-target-{{ arch }}-1.81-{{ checksum \"Cargo.lock\" }}"
  cargo-deny-version:
    type: string
    default: "0.16.1" # Change cargo-deny-cache-key when you change this!
  cargo-deny-cache-key:
    type: string
    default: "v0-cargo-deny-{{ arch }}-0.16.1"
  node-modules-cache-key:
    type: string
    default: "v0-node-modules-{{ checksum \"package-lock.json\" }}"

jobs:
  lint-and-test:
    docker:
      - image: cimg/rust:<< pipeline.parameters.rust-version >>-node
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Rust Formatting
          command: cargo fmt --check
      - restore_cache:
          keys:
            - << pipeline.parameters.target-cache-key >>
            - << pipeline.parameters.node-modules-cache-key >>
      - run:
          name: Install devDependencies (for prettier)
          command: npm install --include=dev
      - run:
          name: HTML and CSS Formatting
          command: npx prettier --check "**/*.{html,css}"
      - run:
          name: Linting
          command: cargo clippy --locked
      - run:
          name: Testing
          command: cargo test --locked
      - save_cache:
          paths:
            - ./target
          key: << pipeline.parameters.target-cache-key >>
      - save_cache:
          paths:
            -  ./node_modules
          key: << pipeline.parameters.node-modules-cache-key >>

  audit:
    docker:
      - image: cimg/rust:<< pipeline.parameters.rust-version >>
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - << pipeline.parameters.cargo-deny-cache-key >>
      - run:
          name: Installing cargo deny
          # The `|| true` at the end here is necessary because cargo install exits with an error status
          # on the CI nodes when the package is already installed (i.e. when we pulled it out of cache).
          # Oddly, I have been unable to replicate that exit status behavior locally.
          command: cargo install cargo-deny@<< pipeline.parameters.cargo-deny-version >> --locked || true
      - save_cache:
          paths:
            - /home/circleci/.cargo/bin/cargo-deny
          key: << pipeline.parameters.cargo-deny-cache-key >>
      - run:
          name: Advisories auditing
          command: cargo deny check advisories
      - run:
          name: Licenses auditing
          command: cargo deny check licenses

  verify-cache-bust:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: Checking CSS
          command: |
            CSS_FILE="./src/assets/css/main.css"
            HTML_FILE="./src/views/base.html"
            CSS_HASH=$(md5sum "$CSS_FILE" | awk '{ print $1 }')

            if [ ! -f "$CSS_FILE" ]; then
              echo "Error: Could not find $CSS_FILE"
              exit 1
            fi

            if [ ! -f "$HTML_FILE" ]; then
              echo "Error: Could not find $HTML_FILE"
              exit 1
            fi

            HTML_HASH=$(grep -o 'href="/assets/css/main.css?h=[^"]*"' "$HTML_FILE" | sed 's/.*h=\([^"]*\).*/\1/' || echo "NOT FOUND")

            if [ "$CSS_HASH" != "$HTML_HASH" ]; then
              echo "Error: Hash mismatch"
              echo "CSS file hash: $CSS_HASH"
              echo "HTML reference hash: $HTML_HASH"
              exit 1
            fi

            echo "Verification successful: CSS file hash matches the reference in $HTML_FILE"

workflows:
  main:
    jobs:
      - lint-and-test
      - audit
      - verify-cache-bust
